<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mintwebb AR-Viewer</title>
    <!-- Import the component -->
    <script
      type="module"
      src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"
    ></script>
    <script src="https://code.iconify.design/2/2.1.0/iconify.min.js"></script>
    <link rel="stylesheet" href="test.css" />
    <meta
      http-equiv="Content-Security-Policy"
      content="upgrade-insecure-requests"
    />
    </script>
  </head>
  <body>
    <!-- src and ios-src is set in app.js -->
    <div id="container">
      <model-viewer
        id="the-viewer"
        alt="3D model of product"
        src="<%= src %>"
        ar
        ar-scale="fixed"
        ar-placement="wall"
        ar-modes="webxr scene-viewer quick-look"
        camera-controls
      ></model-viewer>
    </div>
    <span id="color-wrapper">
      <span class="color-picker">
        <%colors_used.forEach(function(color){ %>
        <span class="one-color">
          <p class="color-name" onClick="">
              <%= color %>
          </p>
          <input class="radio" type="radio" name="color" value="<%= color %>"></input>
        </span>
          <%
        })%>
    </span>
    </span>

    <label class="drop" >
      <input type="checkbox" id="target-drop-example" />
      <!-- Toggle Drop -->
      <span id="thebutton" 
      background-color="<%= button_backgroundColor %>" 
      button-border="<%= button_border %>" 
      text-color="<%= text_color %>" 
      class="control"
      width="<%= width %>"
      height="<%= height %>"
    
      >
      <div id="icon-text-wrapper">
        <img id="theIcon" src="augmented-reality.png" alt="camera-logo" iconWidth="<%= iconWidth %>"/>
        <span id="btntext" class="btn-text" fontSize="<%= fontSize %>"> <%= button_text || "View In Ar"%></span>   
        </span
      >
    </div>
      <!-- Fake button -->
      <!-- Items -->
      <ul class="drop-items">
        <%sizes_used.forEach(function(size){ %>
        <li class="item-drop" onClick="setAttributes(`<%= size %>`, `<%= src %>`, `<%= name %>`)">
            <%= size %>cm
        </li>
        <%
      })%>
      </ul>
      <!-- Alternative to close dropdown with click out -->
      <label for="target-drop-example" class="overlay-close"></label>
    </label>
    <!-- END -- Dropdown -->
    <p class="bl"></p>
    <script>
    function styles() {


 

      // style the button
      let thebutton = document.getElementById("thebutton")
      let btntext = document.getElementById("btntext")
      let icon = document.getElementById("theIcon")
        let color = thebutton.getAttribute("background-color")
        thebutton.style.backgroundColor = color
        // style the border
        let border = thebutton.getAttribute("button-border")
        thebutton.style.border = border
        // style the text-color
        let text_color = thebutton.getAttribute("text-color")
        thebutton.style.color = text_color
        // style the width
        let button_width = thebutton.getAttribute("width")
        thebutton.style.width = button_width
        // style the height
        let button_height = thebutton.getAttribute("height")
        thebutton.style.height = button_height
        // style the fontsize
        let fontSize = btntext.getAttribute("fontSize")
        btntext.style.fontSize = fontSize
        console.log(fontSize)
        // style the fontsize
        let iconWidth = theIcon.getAttribute("iconWidth")
        icon.style.width = iconWidth
        console.log(fontSize)
    }
    styles();
  
     function setAttributes(size, Src, name){
      //*NOTE queryselector alla fÃ¤rger
      //*NOTE if element == checked return element  
      //*NOTE color = element.attribute.color .. . . . . .
      let color;
      let src = Src; 

      let radio_buttons = document.getElementsByClassName("radio")
      Array.from(radio_buttons).map((radio) => {
        if (radio.checked) {
         return color = radio.value;
        }
      })
        console.log( src + "/" + color  + "/" + name + ".glb")
        let userAgent = navigator.userAgent;
let browserName;
console.log(userAgent)
if (userAgent.match(/android/i)) {
  browserName = "Android";
} else if (userAgent.match(/iphone/i)) {
  browserName = "iPhone";
} else {
  browserName = "Unknown";
}

console.log("src", src + "/" + color + "/" + name + ".usdz")

if (browserName === "iPhone") {
  document.getElementById("the-viewer").setAttribute("src", src + "/" + color + "/" + name + ".usdz");
}
if (browserName === "Android") {
  document.getElementById("the-viewer").setAttribute("src", src + "/" + color + "/" + name + ".glb");
}
      }
     
      let viewer = document.getElementById("the-viewer");

      var elements = document.getElementsByClassName("item-drop");
      
        var activateAR = function() {
            viewer.activateAR(); 
        };

        document.getElementById("thebutton").addEventListener('click', activateAR);



        //Utan lista nu
        // Array.from(elements).forEach(function(element) {
        // element.addEventListener('click', activateAR);
        // console.log(document.getElementById("the-viewer"))
        // });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/mobile-detect@1.4.5/mobile-detect.min.js"></script>
  </body>
</html>
